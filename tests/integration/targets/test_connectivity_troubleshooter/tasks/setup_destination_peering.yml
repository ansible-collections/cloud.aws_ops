---
- name: Create VPC 1
  ec2_vpc_net:
    name: "{{ vpc_name }}-1"
    cidr_block: "{{ vpc_1_cidr }}"
  register: __create_vpc_1

- name: Create Subnet 1
  ec2_vpc_subnet:
    cidr: "{{ vpc_1_subnet_cidr_1 }}"
    vpc_id: "{{ __create_vpc_1.vpc.id }}"
    state: present
  register: __create_vpc_subnet_1

- name: Create VPC 2
  ec2_vpc_net:
    name: "{{ vpc_name }}-2"
    cidr_block: "{{ vpc_2_cidr }}"
  register: __create_vpc_2

- name: Create Subnet 2
  ec2_vpc_subnet:
    cidr: "{{ vpc_2_subnet_cidr }}"
    vpc_id: "{{ __create_vpc_2.vpc.id }}"
    state: present
    map_public: yes
  register: __create_vpc_subnet_2

- name: Create VPC Peering
  ec2_vpc_peer:
    vpc_id: "{{ __create_vpc_1.vpc.id }}"
    peer_vpc_id: "{{ __create_vpc_2.vpc.id }}"
    state: present
  register: __create_vpc_peering

- name: Accept VPC Peering
  ec2_vpc_peer:
    peering_id: "{{ __create_vpc_peering.peering_id }}"
    state: accept
  register: __accept_vpc_peering

- name: Create Internet Gateway
  ec2_vpc_igw:
    vpc_id: "{{ __create_vpc_2.vpc.id }}"
    state: present
  register: __create_igw

- name: Gather Route Tables
  ec2_vpc_route_table_info:
    filters:
      vpc-id: "{{ __create_vpc_1.vpc.id }}"
  register: __route_table_info

- name: Set Route out
  ec2_vpc_route_table:
    vpc_id: "{{ __create_vpc_1.vpc.id }}"
    route_table_id: "{{ __route_table_info.route_tables[0].id }}"
    tags:
      Name: "{{ vpc_name }}-1"
    subnets:  
      - "{{ __create_vpc_subnet_1.subnet.id }}" 
    routes:
      - dest: "{{ vpc_2_subnet_cidr }}"
        vpc_peering_connection_id: "{{ __create_vpc_peering.peering_id }}"
  register: __route_table_out

- name: Set Route in
  ec2_vpc_route_table:
    vpc_id: "{{ __create_vpc_2.vpc.id }}"
    tags:
      Name: "{{ vpc_name }}-2"
    subnets:
      - "{{ __create_vpc_subnet_2.subnet.id }}"
    routes:
      - dest: "{{ vpc_1_subnet_cidr_1 }}"
        vpc_peering_connection_id: "{{ __create_vpc_peering.peering_id }}"
      - dest: 0.0.0.0/0
        gateway_id: "{{ __create_igw.gateway_id }}"
  register: __route_table_in

- name: In Security Group
  ec2_group:
    name: "{{ vpc_name }}-1-secgroup"
    vpc_id: "{{ __create_vpc_1.vpc.id }}"
    purge_rules: true
    description: Ansible-Generated internal rule
    rules:
      - proto: udp
        from_port: 12345
        to_port: 12345
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
  register: __security_group_in

- name: Out Security Group
  ec2_group:
    name: "{{ vpc_name }}-2-secgroup"
    vpc_id: "{{ __create_vpc_2.vpc.id }}"
    purge_rules: true
    description: Ansible-Generated internal rule
    rules:
      - proto: udp
        from_port: 12345
        to_port: 12345
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 3128
        to_port: 3128
        cidr_ip: "{{ vpc_1_subnet_cidr_1 }}"
  register: __security_group_out

- name: Deploy EC2 instance 1
  ec2_instance:
    instance_type: t2.micro
    image_id: "{{ image_id }}"
    wait: yes
    network:
      assign_public_ip: no
    vpc_subnet_id: "{{ __create_vpc_subnet_1.subnet.id }}"
    security_groups: "{{ __security_group_in.group_id }}"
    tags:
      Name: "{{ instance_name }}-1"
  register: __create_ec2_instance_1

- name: Deploy EC2 instance 2
  ec2_instance:
    instance_type: t2.micro
    image_id: "{{ image_id }}"
    wait: yes
    network:
      assign_public_ip: yes
    vpc_subnet_id: "{{ __create_vpc_subnet_2.subnet.id }}"
    security_groups: "{{ __security_group_out.group_id }}"
    tags:
      Name: "{{ instance_name }}-2"
  register: __create_ec2_instance_2

- set_fact:
    ip_instance_1: "{{ __create_ec2_instance_1.instances.0.private_ip_address }}"
    ip_instance_2:  "{{ __create_ec2_instance_2.instances.0.private_ip_address }}"
