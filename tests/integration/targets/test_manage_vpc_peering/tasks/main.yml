---
- name: Test 'manage_vpc_peering' role
  module_defaults:
    group/aws:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      security_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"

  block:
    - name: Include 'setup.yml' file
      ansible.builtin.include_tasks: setup.yml

    # VPC Peering (same region)
    - name: Create VPC peering (same region)
      ansible.builtin.include_role:
        name: cloud.aws_ops.manage_vpc_peering
      vars:
        requester_vpc: "{{ eu_central_1_vpc_1.vpc.id }}"
        accepter_vpc: "{{ eu_central_1_vpc_2.vpc.id}}"
        region: eu-central-1
        vpc_peering_operation: create

    - name: delete VPC peering connection req
      ansible.builtin.include_role:
        name: cloud.aws_ops.manage_vpc_peering
      vars:
        region: eu-central-1
        vpc_peering_conn_id: "{{ peering_request_id }}"
        vpc_peering_operation: delete

    #  VPC Peering (cross region)
    - name: Create VPC peering (cross region)
      ansible.builtin.include_role:
        name: cloud.aws_ops.manage_vpc_peering
      vars:
        region: eu-central-1
        accepter_vpc_region: us-west-1
        requester_vpc: "{{ eu_central_1_vpc_1.vpc.id }}"
        accepter_vpc: "{{ us_west_1_vpc_1.vpc.id}}"
        vpc_peering_operation: create

    - name: delete VPC peering connection req
      ansible.builtin.include_role:
        name: cloud.aws_ops.manage_vpc_peering
      vars:
        region: eu-central-1
        vpc_peering_conn_id: "{{ peering_request_id }}"
        vpc_peering_operation: delete

  always:
    - name: Include 'teardown.yml' file
      ansible.builtin.include_tasks: teardown.yml
