---
# Integration tests for s3_object
- name: Test 'moving_objects_between_buckets' role
  module_defaults:
    group/aws:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      security_token: '{{ security_token | default(omit) }}'
      region: "{{ aws_region }}"

  block:
  #   # Create s3 buckets ====================================================================
    - name: Create source s3 bucket
      amazon.aws.s3_bucket:
        name: "{{ bucket_name_src }}"
        state: present

    - name: Create destination s3 bucket
      amazon.aws.s3_bucket:
        name: "{{ bucket_name_dest }}"
        state: present

    # Put objects into s3 source buckets ===================================================
    - name: Put object (text) in source bucket
      amazon.aws.s3_object:
        bucket: "{{ bucket_name_src }}"
        object: /template/test.txt
        content: "{{ lookup('file', 'test.txt') }}"
        mode: put

    - name: Put object (python) in source bucket
      amazon.aws.s3_object:
        bucket: "{{ bucket_name_src }}"
        object: test.py
        content: "{{ lookup('file', 'test.py') }}"
        mode: put

    - slurp:
        src: "{{ role_path }}/files/test.png"
      register: put_binary

    - name: Put object (image) in source s3 bucket
      amazon.aws.s3_object:
        bucket: "{{ bucket_name_src }}"
        object: put-binary.bin
        content_base64: "{{ put_binary.content }}"
        mode: put

    # Moving one object between buckets =======================================================
    - name: 
      ansible.builtin.include_role:
        name: cloud.aws_ops.moving_objects_between_buckets
      vars:
        moving_bucket_src: "{{ bucket_name_src }}"
        moving_bucket_dest: "{{ bucket_name_dest }}"
        moving_bucket_src_objects_prefix: "template"

    - name: Obtaining source bucket
      amazon.aws.s3_object:
        bucket: "{{ bucket_name_src }}"
        mode: list
      register: bucket_src_info

    - name: Check the source s3 bucket remaining objects
      ansible.builtin.assert:
        that:
        - "bucket_src_info.s3_keys[0] == 'put-binary.bin'"
        - "bucket_src_info.s3_keys[1] == 'test.py'"
        
    - name: Obtaining destination bucket
      amazon.aws.s3_object:
        bucket: "{{ bucket_name_dest }}"
        mode: list
      register: bucket_dest_info

    - name: Check the destination s3 bucket obtained one object
      ansible.builtin.assert:
        that:
        - "bucket_dest_info.s3_keys[0] == 'template/test.txt'"
    
    # Moving all objects between buckets =======================================================
    - name: 
      ansible.builtin.include_role:
        name: cloud.aws_ops.moving_objects_between_buckets
      vars:
        moving_bucket_src: "{{ bucket_name_src }}"
        moving_bucket_dest: "{{ bucket_name_dest }}"

    - name: Obtaining source bucket
      amazon.aws.s3_object:
        bucket: "{{ bucket_name_src }}"
        mode: list
      register: bucket_src_info

    - name: Check the source s3 bucket is empty
      ansible.builtin.assert:
        that:
        - "bucket_src_info.s3_keys == []"
        
    - name: Obtaining destination bucket
      amazon.aws.s3_object:
        bucket: "{{ bucket_name_dest }}"
        mode: list
      register: bucket_dest_info

    - name: Check the destination s3 bucket received all objects
      ansible.builtin.assert:
        that:
        - "bucket_dest_info.s3_keys[0] in ['put-binary.bin','template/test.txt', 'test.py']"
        - "bucket_dest_info.s3_keys[1] in ['put-binary.bin','template/test.txt', 'test.py']"
        - "bucket_dest_info.s3_keys[2] in ['put-binary.bin','template/test.txt', 'test.py']"

  always:
    # Clean up starts here =================================================================
    - name: Delete source s3 bucket
      amazon.aws.s3_bucket:
        name: "{{ bucket_name_src }}"
        state: absent

    - name: Delete destination s3 bucket
      amazon.aws.s3_bucket:
        name: "{{ bucket_name_dest }}"
        state: absent
        force: true