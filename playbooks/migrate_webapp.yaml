---
- hosts: localhost
  gather_facts: false

  collections:
    - community.aws
    - amazon.aws

  vars_files:
    - vars/main.yaml

  module_defaults:
    group/aws:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      security_token: "{{ security_token | default(omit) }}"

  tasks:
    - fail:
        msg: resource prefix should be defined as resource_prefix
      when: resource_prefix is not defined

    - fail:
        msg: destination region should be defined as dest_region
      when: dest_region is not defined

    - name: Get RDS instance info
      rds_instance_info:
        region: "{{ aws_region }}"
        db_instance_identifier: "{{ rds_identifier }}"
      register: rds_info

    - fail:
        msg: >-
          Application not deployed yet into region '{{ aws_region }}',
          No RDS Instance found with identifier '{{ rds_identifier }}'.
      when: rds_info.instances | length == 0

    - name: Create snapshot for Database instance
      rds_instance_snapshot:
        region: "{{ aws_region }}"
        db_snapshot_identifier: "{{ rds_identifier }}-snapshot"
        db_instance_identifier: "{{ rds_identifier }}"
        wait: true
        state: present
      register: snapshot

    - name: Copy snapshot from source region to destination region
      rds_instance_snapshot:
        db_snapshot_identifier: "{{ rds_identifier }}-snapshot"
        wait: true
        source_db_snapshot_identifier: "{{ snapshot.db_snapshot_arn }}"
        source_region: "{{ aws_region }}"
        region: "{{ dest_region }}"
      register: result

    - import_tasks: tasks/create.yaml
      vars:
        rds_snapshot_arn: "{{ result.db_snapshot_arn }}"
        region: "{{ dest_region }}"

    - name: Delete RDS snapshots from different regions
      rds_instance_snapshot:
        region: "{{ item }}"
        db_snapshot_identifier: "{{ rds_identifier }}-snapshot"
        wait: true
        state: absent
      with_items:
        - "{{ dest_region }}"
        - "{{ aws_region }}"

    - name: Delete instance create in source region
      import_tasks: tasks/delete.yaml
      when: do_not_delete_source | default('false') | bool

- name: Deploy resource from Bastion
  hosts: bastion
  gather_facts: false

  collections:
    - community.aws
    - amazon.aws

  vars_files:
    - vars/main.yaml

  tasks:
    - import_tasks: tasks/deploy_app.yaml
      vars:
        region: "{{ dest_region }}"
