---
- hosts: all
  gather_facts: no
  strategy: free
  become: true

  vars:
    container_name: "webapp-container01"

  tasks:
    - name: Update ssh_config
      lineinfile:
        path: "/etc/ssh/sshd_config"
        regex: "{{ item.regex }}"
        line: "{{ item.line }}"
      loop:
        - regex: "^(# *)?ClientAliveInterval"
          line: "ClientAliveInterval  1200"
        - regex: "^(# *)?ClientAliveCountMax"
          line: "ClientAliveCountMax 3"

    - name: Install Podman
      yum:
        name:
          - podman
        state: present

    - name: Pull image from private registry
      shell:
        cmd: >
          podman login {{ registry_host_port }} -u {{ registry_login.user }} -p {{ registry_login.password }} --tls-verify=false &&
          podman pull {{ registry_host_port }}/ansible-webapp --tls-verify=false

    - name: Check running container
      shell:
        cmd: >
          podman container ps -a
          -f name={{ container_name }}
          --format=.Names
      register: container

    - name: Run application instance
      shell:
        cmd: >
          podman run --rm
          -e FLASK_APP="{{ application_dir }}"
          -e FLASK_ENV="{{ application_env }}"
          -e DATABASE_HOST="{{ application_db.host }}"
          -e DATABASE_INSTANCE="{{ application_db.instance }}"
          -e DATABASE_USER="{{ application_db.dbuser_name }}"
          -e DATABASE_PASSWORD="{{ application_db.dbuser_password }}"
          -e ADMIN_USER="{{ application_db.admin_user }}"
          -e ADMIN_PASSWORD="{{ application_db.admin_password }}"
          -e WORKER_HOSTNAME="{{ inventory_hostname }}"
          -e WORKERS_HOSTS="{{ workers_hosts }}"
          -p 5000:5000 --name {{ container_name }}
          -d {{ registry_host_port }}/ansible-webapp
      when:
        - container.stdout == ""