---
- name: Get vpc information
  amazon.aws.ec2_vpc_net_info:
    filters:
      tag:Name: vpc-{{ ec2_resource_prefix }}
  register: vpc

- name: Delete EC2 resources
  when: vpc.vpcs | length == 1
  block:
    - name: Set 'vpc_id' variable
      ansible.builtin.set_fact:
        vpc_id: "{{ vpc.vpcs.0.vpc_id }}"

    - name: Get EC2 instance info
      amazon.aws.ec2_instance_info:
        filters:
          instance-type: "{{ custom_ami_ec2_instance_type }}"
          key-name: key-{{ ec2_resource_prefix }}
          vpc-id: "{{ vpc_id }}"
          tag:role: customized_ami
      register: ec2_instance

    - name: Delete EC2 instance
      amazon.aws.ec2_instance:
        instance_ids:
          - "{{ ec2_instance.instances.0.instance_id }}"
        wait: true
        state: terminated
      when: ec2_instance.instances | length > 0

    - name: Delete key pair to connect to the VM
      amazon.aws.ec2_key:
        name: key-{{ ec2_resource_prefix }}
        state: absent

    - name: List Security group from VPC
      amazon.aws.ec2_security_group_info:
        filters:
          vpc-id: "{{ vpc_id }}"
          tag:role: customized_ami
      register: sg

    - name: Delete security groups
      amazon.aws.ec2_security_group:
        state: absent
        group_id: "{{ item }}"
      with_items: "{{ sg.security_groups | map(attribute='group_id') | list }}"

    - name: List routes table from VPC
      amazon.aws.ec2_vpc_route_table_info:
        filters:
          vpc-id: "{{ vpc_id }}"
          tag:role: customized_ami
      register: route_table

    - name: Delete VPC route table
      amazon.aws.ec2_vpc_route_table:
        route_table_id: "{{ item }}"
        vpc_id: "{{ vpc_id }}"
        lookup: id
        state: absent
      with_items: "{{ route_table.route_tables | map(attribute='id') | list }}"

    - name: Delete internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc_id }}"
        state: absent

    - name: Delete subnets
      amazon.aws.ec2_vpc_subnet:
        cidr: "{{ custom_ami_subnet_cidr }}"
        state: absent
        vpc_id: "{{ vpc_id }}"

    - name: Delete VPC
      amazon.aws.ec2_vpc_net:
        name: vpc-{{ ec2_resource_prefix }}
        cidr_block: "{{ custom_ami_vpc_cidr }}"
        state: absent
